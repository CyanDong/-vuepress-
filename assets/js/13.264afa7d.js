(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{412:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"选项式api和组合式api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项式api和组合式api"}},[t._v("#")]),t._v(" 选项式API和组合式API")]),t._v(" "),s("p",[t._v("选项式API")]),t._v(" "),s("p",[t._v("各个选项都有固定的书写位置，data选项写响应式数据，methods选项写方法函数")]),t._v(" "),s("p",[t._v("优点：规定代码位置，结构清晰")]),t._v(" "),s("p",[t._v("缺点：代码组织性差，相似的逻辑代码不能复用，一个功能逻辑的代码分散，上下文代码难找")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 响应式数据")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法函数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("组合式API（使用函数而不是声明选项式书写vue组件）")]),t._v(" "),s("p",[t._v("简单来讲就是使用setup方式编写组件，特点：特定功能相关的东西都在一起，同一功能代码集中在一起")]),t._v(" "),s("p",[t._v("优点：可以快速定位到某个功能的所有相关代码，可以进行逻辑拆处理、功能封装")]),t._v(" "),s("p",[t._v("缺点：需要具备良好的代码组织能力和拆分逻辑能力（vue3中也可以支持vue2选项式API写法）")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getVal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      getVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但组合式API并不是函数式编程，组合式API是以vue中数据可变、细粒度的响应式系统为基础的，但函数式编程通常强调数据不可变")]),t._v(" "),s("p",[t._v("为什么是用组合式API")]),t._v(" "),s("p",[t._v("1、更好的逻辑复用")]),t._v(" "),s("p",[t._v("组合式API最基本的优势是我们能够通过组合函数来实现更简洁高效的逻辑复用。在选项式API中我们主要的逻辑复用机制是mixins，而组合式API解决了mixins的所有缺陷。组合式API提供的逻辑服用能力孵化了一些很棒的社区项目，VueUse。组合式 API 还为其他第三方状态管理库与 Vue 的响应式系统之间的集成提供了一套简洁清晰的机制，例如 RxJS。")]),t._v(" "),s("p",[t._v("2、更灵活的代码组织")]),t._v(" "),s("p",[t._v("选项式API规范代码的位置，data里面写响应式数据，methods里面写方法函数。但是选项式API在单个组件的逻辑复杂到一定程度，需要处理多个逻辑关注点的组件中，会有一些限制")]),t._v(" "),s("p",[s("img",{attrs:{src:"/-vuepress-/%E9%80%89%E9%A1%B9%E5%BC%8FAPI.png",alt:"alt 属性文本"}})]),t._v(" "),s("p",[t._v("可以看到相同逻辑关注点的代码被拆分到不同选项中，位于文件的不同位置，如果代码行数多，需要在文件来回上下滚动，如果想拆分成一个可复用的组件，需要从文件中不同位置找到正确的代码片段。")]),t._v(" "),s("p",[t._v("如果使用组合式API重构组件，会变成下图这样。\n"),s("img",{attrs:{src:"/-vuepress-/optionsAPI.png",alt:"alt 属性文本"}}),t._v(" "),s("img",{attrs:{src:"/-vuepress-/compositionAPI.png",alt:"alt 属性文本"}}),t._v("\n同一个逻辑关注点相关的代码被放在一起，不需要在不同选项块中来回滚动切换，也能够更方便的将同一个逻辑功能的代码一起移动到外部文件，不需要重新组织代码，降低重构成本。")]),t._v(" "),s("p",[t._v("3、更好的类型推导")]),t._v(" "),s("p",[t._v("对TS更为友好，组合式API主要利用基本的变量和函数，本身就是类型友好的。用组合式API重写的代码可以享受完整的类型推导，不需要输血太多类型标注")]),t._v(" "),s("p",[t._v("4、更小的生产包体积")]),t._v(" "),s("p",[t._v("搭配"),s("code",[t._v("<script setup>")]),t._v("使用组合式API比等价情况下的选项式API更高效，对代码压缩也更友好。是因为"),s("code",[t._v("<script setup>")]),t._v("形式书写的组件模块被编译为一个内联函数，和"),s("code",[t._v("<script setup>")]),t._v("中的代码位于同一作用域。不像选项式API需要依赖"),s("code",[t._v("this")]),t._v("上下文对象访问属性，被编译的模版可以直接访问"),s("code",[t._v("<script setup>")]),t._v("中定义的变量，无需一个代码实例从中代理。对代码压缩更友好，一呢日本地变量的名字可以被压缩，但对象的属性名不能。")]),t._v(" "),s("p",[t._v("选项式和组合式API的关系")]),t._v(" "),s("p",[t._v("组合式API的目的是增强，不是取代选项式API，vue3对两种API都是支持的")]),t._v(" "),s("p",[t._v("简单场景下使用选项式API更加简单方便")]),t._v(" "),s("p",[t._v("需要强烈支持TS的项目、大量逻辑复用场景的项目首选组合式API")]),t._v(" "),s("h2",{attrs:{id:"生命周期函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数"}},[t._v("#")]),t._v(" 生命周期函数")]),t._v(" "),s("p",[t._v("选项式API")]),t._v(" "),s("p",[t._v("beforeCreate、created、beforeMount、mounted、beforeUpdate、updated、beforeDestroyed、destroyed")]),t._v(" "),s("p",[t._v("组合式API")]),t._v(" "),s("p",[t._v("setup、onBeforeMount、onMounted、onBeforeUpdate、onUpdated、onBeforeUnmount、onUnmounted")]),t._v(" "),s("p",[t._v("组合式API可以多次使用同一个生命周期函数，执行顺序和书写顺序相同")]),t._v(" "),s("h2",{attrs:{id:"组合式api基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合式api基础"}},[t._v("#")]),t._v(" 组合式API基础")]),t._v(" "),s("p",[t._v("1、setup入口函数")]),t._v(" "),s("p",[t._v("· setup函数是一个新的组件选项，是组件中组合式API的起点（入口）")]),t._v(" "),s("p",[t._v("· setup中不能使用this，this指向undefined")]),t._v(" "),s("p",[t._v("· setup函数只会在组件初始化的时候执行一次")]),t._v(" "),s("p",[t._v("· setup函数在beforeCreate生命周期函数执行之前执行")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setup执行了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beforeCreate执行了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("2、reactive函数")])])}),[],!1,null,null,null);s.default=e.exports}}]);